 docker的运行  
 构建一个单机多容器运行环境 其中运用的 命令就是docker run
 我们用docker run 来构建容器 因为我们之前拉了很多镜像到本地，接下来就是要把这些镜像给运行起来 
 首先 host就是我们的主机 安装了docker的机器不管是物理机还是一个虚拟机 都是一个host
 有一种架构一台物理机上有多个vm  不管你是一个虚拟机还是物理机，你在机器上装有我们的docker engine 它被称为host， host可以跟我们的容器之间是可以交互的  怎么来交互呢， 
 多个vm 每个vm安装docker engine，有多个容器，容器之间是可以交互的  这样的架构 就是基于容器的分布式架构

 多台vm可以由hyper-v 自己构建，同时呢你也可以基于云，因为我只要多台虚拟机就可以了 阿里云之类的，
 
 我们自己来构建一个单机多容器环境
 物理机 安装docker  有两个容器 a和b， 假如我们是做一个web程序呢   物理机有个ip地址 192.168.1.102， 有一个浏览器 在另外一台机器上 浏览器访问物理机上的容器，就需要通过ip加端口来访问,这个时候我们就会在容器上跟物理机之间会有一个端口映射关系，这个映射呢   web程序是运行在容器里面的，容器里面会开一个容器内端口给web程序比如说是80,然后a容器的80端口和 物理机的8000端口映射， b容器的80端口和物理机的8001端口映射 这个交互式双向的
 -d 后台运行 不会阻塞前台ui
 docker run
       -p 8001:80
	   -d detach
	   --name  test
	   image   redis

下节在进行镜像的制作，本节先知道概念和它是怎么工作的

在测试环境中，我们可以通过ip加端口来访问，那么在生产环境中，我们在物理机上装一个nginx，有了ngnix我们会用ngnix把这两个端口转发，相当于反向代理，用了转发之后，8000端口对应video.jessetalk.cn，8001端口对应blog.jessetalk.cn   这两个域名映射呢， 也就是在做域名地址绑定的时候，两个域名绑定的ip都是 192.168.1.102，然后在ngnix上 根据域名来做反向代理 video.jessetalk.cn路由到 代理到 a容器 也就是本地的8001端口， ，在ngnix上还有一层转发
ngnix是如何配置 如何工作的？
 