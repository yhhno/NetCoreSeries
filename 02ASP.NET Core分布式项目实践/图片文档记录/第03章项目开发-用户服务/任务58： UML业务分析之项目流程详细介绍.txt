
问题:  没有好奇？ 没有兴趣？ 没有驱动？
问题1：最重要的还是情绪，是精神层面的
问题2：把业务理清楚，理顺，也是个问题呢？
问题3：如果遇到一大堆连续的东西，脑子一下子要处理这么多东西，肯定处理不过来，觉得难，情绪有波动，怎么办？划分小段，每次小段开始都是从0开始嘛，这样就好接受多了额，
问题4：又可能是前面的不理解造成后面的进行有问题，因为心里有疑问？
问题5：期望不对，期望以原来的经验或者一步到位或者期望自己可以完成 等等不同的期望，当期望与现实不匹配的时候，就失落， 失落就在原地打转，不对，期望不对，期望与现实不匹配后的 情绪和做法也不对。


办法1：怕个吊，再难的 只要我一个字一个字，逐字逐句去理解都不是问题， 一切都是纸老虎。 
办法2：打到一切情绪上的纸老虎
办法3：打到一切行为上的纸老虎

大家好，这节课我们呢在来讲下 这个 上节课 我们说到的 最复杂的 项目的流程，
这个时候我们要用到uml的泳道流程，这个时候呢 我们可以 这样来创建 首先呢，我们 这个角色是我们的项目发起人，项目发起人在这个地方呢 我们还有一个好友 然后呢还有一个是什么？二度好友，然后呢 非好友， 这样的四种状态，都可以去参与进来，这四种角色呢其实都是可以参与进来，
我们首先来看下，从第一个起点开始，当然是创建项目，然后呢，接下来，这个项目它就会出现在好友的机会列表， 对吧，然后 在我们创建项目的时候，要去看下创建项目的逻辑，项目的创建，在创建的时候，会有一个这个，可见的范围，有两个，一个是设置权限，如果你是选择了公开给所有好友，那么你所有的好友都可见，如果你只选中了部分好友可见，那么只有部分好友才看得到，这个地方会有过滤，跟我们微信朋友圈会有点像，所以在这个地方，我们会有一个判断，在好友的这个地方呢，如果你是这个人的好友，我们又会一个是否可以见的一个范围，如果是的话，我们才可以去让你看到这个项目，如果否，就看不到这个项目，所以它这里会有这样的流程，然后呢？下面还有一个流程是委托给整个平台 我们叫finbook 代为推荐，这有个委托协议， 也就是说只有委托给平台了的项目，我们才可以给非好友去推荐，否则你是不能够推荐给别人的项目，他没有让你去推荐的话，所以在非好友这个地方呢,又有一个判断，我们在这个地方叫 是否委托给平台，所以呢，只有当它是的时候，它才会能够看到这个机会，那它看到这个机会呢，它就可以进行我们说的那个行为叫 访问项目，然后接下来呢，它可以根据访问项目 我们这里来看下， 这个流程是这样的，在机会列表，如果看到一个系统推荐项目的话，你可以点进去，在这个地方下面会出现，这个查看详细按钮是没有的， 我们看访问者， 访问者这里其实少了一个原型， 也就是在这个项目它是没有这个   这个是共同好友的 基于二度好友的看到的项目，那么，我们这里改下，在访问者这里我们会出现一个系统推荐，系统推荐的时候呢 这个地方你是不能去查看详细的，就完了，只能返回，返回的时候呢，会回退到这个机会那个地方去， 我们可以在机会的这个地方， 在机会列表，如果他点击系统推荐项目，他就会进入到这个地方 没有任何可以操作的，然后它可以点击返回，继续回到机会列表，这个时候他应该，去查看这个这个人是谁，然后呢，它可以将它添加为好友，对，这就完成整个这样一个流程 所以我们在这个地方，访问项目，然后 同时他还可以直接干一件事情，就是查看资料，他还可以添加好友 这样之后，添加完好友之后， 这三个是并行的， 当我们这个  添加完好友之后呢 ,你就可以进行  那你就回到这里了 其实就到了好友角色里的获取机会了，获取机会之后你就可以进行访问项目，然后紧接着呢，查看项目，然后呢，参与项目，所以在你获取机会之后，访问项目，查看项目，参与项目，然后你添加成好友之后，其实就可以进到好友角色下的访问项目， 它就回归到这样的一个流程， 是吧， 好 那你  
接下来 我们说二度好友，这个地方， 二度好友呢，首先它带是这样，如果你的好友本身是在一个项目的可见范围之内，它可以获取到机会，，这时你的二度好友，才可以获得机会，查看到，否则你是看不到的，因为你的好友都不能看到的话，我们是不会把它推荐给二度好友的额，二度好友获取到之后， 这个时候，相当于什么呢 大家看，访问项目和查看项目时候都是属于一度好友才可以做的事，二度好友是不可以做的，二度好友要干什么呢，会让一度好友去访问项目，查看项目，参与项目之后，二度好友才可以  等于是说，先要一度好友参与进来，二度好友才可以对这个项目进行访问，查看，和参与， 那所以这个  二度好友呢在和一度好友之间，进行一个联系， 就是说可能 我们叫做  一度好友在参与项目之前 自己可能自己做一个判断 是否参与？，如果它选择不参与项目，也就没有后面的事了，它就仅仅成为一个查看项目列表的一员， 然后呢，在我们这个二度好友看到这个项目之后呢？就是说，其实他还没有去参与这个项目，只要一度好友能获取机会，它的二度好友就可以获取机会，但是二度好友能不能够访问和查看呢，其实是不能的， 因为它的好友还没有参与，只有它的好友先参与了项目之后，二度好友角色下，获得机会，（然后需要做一个判断，好友是否已参与，）也就是他会通过一个行为叫通知好友参与项目，那他就必须告诉他呀，告诉它的好友说，你去参加，参加完之后，他才可以去从好友的列表里面，好友已参加项目的情况下， 我们这个地方应该是一个三角形， 有可能你通知了好友，他不想干这个事情，但是其实一般人来说，不会拒绝，因为他只是参与一下中间人，他其实不需要做什么，这个时候主要接下来就是二度好友来做这个事情，，然后如果好友参与之后，二度好友就可以来开始访问项目， 这个时候大家注意到就是说 它的角色就发生变化了，它就不是以二度好友角色在玩，  它是以一度好友角色在玩，所以这个时候呢、我们要切回去 ， 这个项目他就会，直接看到它好朋友的项目，而这个时候，它已经不是看到一个二度好友项目了，所以它会变成一个一度好友，这个时候它就可以去走，这个一度好友流程了，那么他完成之后呢，我们就可以来，其实就会进行到这里，好友角色的访问项目，，所以大家看到不管你是二度好友，还是非好友，最后其实都会走到好友这一步，只是说对于这个二度好友来讲呢，他需要先让一度好友参与这个项目，它才可以去做好友角色应该做的事，而非好友呢，他需要先添加这个人为好友，之后才可以去做这些事情，所以我们最后把这个流程全部汇总到了好友角色的流程里，
参与项目接下来之后，我们接着走，它会有两种，中间人，我们用一个 是否结束项目来表示， 如果它选择不结束，它是一个中间人，对吧，如果它选择结束呢，我们叫他为合伙人，其实在 我们还没有在整个 就算是金融领域呢，我们调研来讲，也没有一个准确的名词，所以我们自己定义一个叫 其实英文名字会比较合适，close方，close其实在contact就是合同这块来说，是比较准确的，中文，介于知识水平的限制，没有发现一个合适的名词，所以我们就叫closer，这个地方参与呢叫Contributer，跟我们github上的名字是一样的，那么我们就起了这样一个名字，那大家会注意到 这个时候呢好友角色就变成了这个项目的Contributer角色，
然后，我们在查看项目的时候，项目发起人会收到通知（收到查看通知）， 然后参与的时候呢，他也会收到通知（收到加入通知），那么这个是项目发起人，那当然我们还会有另外一种角色 大家会注意到 我参加了这个项目时候呢，需要来一个判断，是否结束项目， 当他是y的时候，我们就会接下来，成立项目群，这是一个流程的终点，因为这个项目成立项目群之后呢，还有其他人接着还可以创建项目群，在不同的群不同的人里面嘛，如果是N的话，只需要收到通知就可以了不需要成立项目群，如果它成立项目群，他会把这群人加进来，那在这个地方会有一层关系，这层关系是什么样子呢，就是说当第一个人创建这个项目，它是这个项目的创建人，那么还有这个 它成为contributer之后呢，他也会成为一个项目的合伙人，它的好友呢？会接着来走这样的一个流程 也就是说我们会把这个好友呢变成类似于项目发起人的角色，会接着把这个流程延续下去，给传递下去，但是这个项目发起人和这个类似项目发起人的角色，有一点点的区别就是类似项目发起人不会成立项目群，包括 当然它可以看到这个项目概览，就是我们在这个地方，项目概览地方， 我们会注意到这个地方是一个链条。第一个人它会看到这个项目概览 从他这个链条出发，它的下一级合伙人和查看人，然后如果有合伙人进来后，合伙人又会看到这个项目概览，它会从它这个链条出发的，它的下一级合伙人和查看人，就是一级一级延续下去，而直到最后有一个人点击了close之后，就它是最终结束这个项目的话，此时项目发起人会收到一个通知，并成立项目群，成立项目群这个操作只有第一个项目发起人才可以做，其他人呢会被默认的全部添加到这个群里面去，他们不需要在中间去做决定，因为不需要传递，这样传递的话效率会特别低，比如说我们又abcd四个人呢，那么d点击了结束，那么我们不需要等到d的上一级也就是c同意，也不需要c的上一级b同意，而是直接跳过c和b，由a直接同意，那这个时候直接整个链条串起来了，建立一个群，
那当然我们可能会出现这样的情况，怎么给大家形象的解释下，就是  这个流程应该是  起点 创建项目 加入项目 他成为了一个合伙人，它的好友呢接着再加入项目，它的好友的好友再加入项目，同时以结束方身份 这就会形成一个链条，每一个人呢参与了中间的一环，他们会对整个项目的佣金进行分成，比如说这个项目可能是一个1000w的利润，拿出3%来进行分的话，这四个人会来进行分配，当然这个分配我们现在app不涉及到，主要是把这个流程给串起来，把他们建立一个群，让他们效率得到提升，让他们同时呢把自己的好友全部加进来，解决他们效率的问题，所以我们这个app到底解决什么问题? 就是这个地方 解决了他们这个效率的问题，同时你不需要回很多微信消息，只需要在有人结束的时候，这个群才会成立，在这个中间你都是不知道的，你不知道发展成什么样子，可能这个地方 只有两级，那它就会以更快的速度先达成，同时也有可能是这个样子  但是当然并不代表着 结束之后整个流程就完了，其实我们做的是线下的业务，只是代表我们帮他们把团队给搭起来了额，这个项目 事情到底能不能做成呢 其实还是取决于这个团队到底能不能做成这个事情，所以它其实会有多条链条并行，我们现在整个产品还没有涉及到后面这块的管理，可能到后期会涉及到，所以在前期时候，我们只需要把群创建好就可以了， 像这种情况 会成立三个群，这都是不同的人，当然创建人只有一个，并且只有他有这个权限，去成立项目群，那他是群主，所以它会建立三个群，这个三个群里面，分别是以他的一度好友发展出来的二度好友，三度好友，不等，来做的这个事情，，所以这样的话，大家应该能够理解 我们整个项目流程上的一个 完整的一个需求，那关于项目这块呢 需求这块 我么就将这么多，通过我们这个泳道流程图和我们下面的这个三个链条，让大家明白  我们这个项目的一个运作方式也就是大家会看到， 原型当中呢，我们怎么来理解 在我的项目里面，一旦出现在我的项目里面有两种可能，一种呢这个项目就是我创建的，对吧 还有可能是你从别人那里fork来的 那这里的区别就是你自己创建的项目，最后由你来创建群，如果你是fork过来的，你只是中间的一环，所以到最后 项目群的地方呢，如果是你自己的项目，你就是发起人，否则你就是合伙人也就是投资人或者财务顾问，
这就是我们这个整个app流程，通过业务介绍 来进行 做了个分析 那么业务分析结束之后呢， 我们接下来要做的是真正开始我们的设计部分了。