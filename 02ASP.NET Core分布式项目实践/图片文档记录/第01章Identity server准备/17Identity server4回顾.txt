扩展性是啥？ 
接口标识是啥

有一个遗留
在登录之后呢 用户同意授权这不步呢 没有做，直接跳过了，这种情况呢就是，大家可以理解为，我们自己比较信任的这种客户端，也就是这个应用属于我们自己的，如果是第三方客户端的话，就需要做授权这一步了，
大家如果还记得，我们在登录简书的时候跳转到 微博  我们回顾下
简书登录， 点击微博登录，之后呢 跳到微博的登录页面，输入用户名和密码后，
来到授权页面

登录的话，会自动登录，因为它要保存cookies，也就是跳过登录页面，直接来到授权页面，
如果我们做过授权的话，跳过授权，直接登录到简书首页  
此时 我们可以到微博上，把已经授权的授权，给取消掉
在Oauth流程下，如果信任的话，自己来用，那么很多的中间过程，可以省略掉，那么不信任的话，我们可以让用户有这个感知的过程，就是是我经过同意后，第三方才可以使用的，如果我们没有同意，是不可以的



我们来说实现下constent过程
在这之前呀，我们需要回顾下
我们用到testuserstore，它是用来存放我们的测试用户的一个 大家可以理解为 它提供一些方法对测试数据进行访问，  
今天我们还会接触点哦啊	因为我们要做constent还会接触点， 因为它和identity有点像， 既然他们帮我们做了封装的话，那么它的数据我们要来访问的话，通过一些 比如说 testuserstore来访问testuser  那么还有一个东西是 因为我们有resource 那么就会有Iresourcestore  还有一个Iclientstore
testusestore     对应 testuser  测试用户内存中使用 而applicationuser是在asp.netcore identity中使用的， 他们两个是一个种类。
Iresourcestore   对应apiResource
Iclientstore     对应client
从名字可以看出，我们通过这些来访问对应的数据集合
还有个IIdentityserverinteractionservice  这个是跟identityserver 授权这块进行交互的东西

这四个集合都可以在Authorize server下访问到 也就是被Authorize server拿过来用的

identtyResource 和apiresource一块  通过profileservice 返回claims

此时如果有一个客户端访问时，它是访问到Authorize server ，最后拿到的是claims