问题1： 小步跟随，不然步子大了，记得不清晰，还有返工看，   如何保证呢？
问题1： 记思路，理解思路， 不记细节， 如何保证？
问题2： 自己并不是在跟随，而是去动的，去教授，去复习等  如何保证呢？ 面对不同细节 如何应对呢？细节1.比如select这样之前理解有问题的 Aciton  Func等


首先新建一个controller  consentcontroller
添加index的view 有两块，第一块显示客户端信息， 第二块显示scope信息，  有哪些api用户可以访问，有哪些个人信息可以显示出来
新建ConsentViewModel
    public class ConsentViewModel
    {
        public string ClientId { get; set; }
        public string ClientName { get; set; }
        public string  ClientLogoUrl { get; set; }
        public bool AllowRememberConsent { get; set; }//是否记住

        public IEnumerable<ScopeViewModel> IdentityScopes
        { get; set; }//可供个人信息，供选择 

        public IEnumerable<ScopeViewModel> ResourceScopes

        { get; set; }//可供Api信息，供选择 


    }


新建一个ScopeViewModel
 //看官方文档，
    public class ScopeViewModel//这些属性都是根据identityserver4的要求来的， 因为我们的页面要和identityserver4提供的功能类库交互呀， 我们只是调用，当然要传递符合要求的东西，  
    {
        public  string Name { get; set; }//
        public  string DisplayName { get; set; }//
        public string Description { get; set; }//描述
        public string Emphasize { get; set; }//是否强调
        public string Required { get; set; }//是不是必须的

        public bool Checked { get; set; }//是否选择
    }

把model显示在index的view中

1.identitScope
2.resourceScoppe
3.是否记住
4.提交按钮

view中有重复的内容， 新建个partialview 重复利用
新建_ScopeListitem.cshtml
调用partialview
@Html.Partial("_ScopeListitem",scope)

背后原理， 不就类似调用Action
		/// <summary>
		/// Returns HTML markup for the specified partial view.
		/// </summary>
		/// <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" /> instance this method extends.</param>
		/// <param name="partialViewName">
		/// The name of the partial view used to create the HTML markup. Must not be <c>null</c>.
		/// </param>
		/// <param name="model">A model to pass into the partial view.</param>
		/// <param name="viewData">A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary" /> to pass into the partial view.</param>
		/// <returns>
		/// Returns a new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" /> instance containing the created HTML.
		/// </returns>
		/// <remarks>
		/// This method synchronously calls and blocks on
		/// <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.PartialAsync(System.String,System.Object,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)" />
		/// </remarks>
		public static IHtmlContent Partial(this IHtmlHelper htmlHelper, string partialViewName, object model, ViewDataDictionary viewData)
		{
			//IL_0008: Unknown result type (might be due to invalid IL)
			//IL_0016: Unknown result type (might be due to invalid IL)
			//IL_0025: Unknown result type (might be due to invalid IL)
			//IL_002a: Unknown result type (might be due to invalid IL)
			if (htmlHelper == null)
			{
				throw new ArgumentNullException("htmlHelper");
			}
			if (partialViewName == null)
			{
				throw new ArgumentNullException("partialViewName");
			}
			return (IHtmlContent)htmlHelper.PartialAsync(partialViewName, model, viewData).GetAwaiter().GetResult();
		}