想把Oauth流程讲透，才能更好地理解open id connect
继续回到微博开放平台，以他为例子
它上面单独讲解了微博登录的授权机制，并且明确告诉我们它所用的是OAuth2.0授权机制，
然后呢 授权界面上内容是 
获取你的个人信息 好友关系，
等等
OAuth呢本身就像刚开始讲的一样，它是一个授权的一个框架，一个标准，但它所决定就是你能干什么，但是这里有一个获取你个人信息 好友关系的这块，其实它是给你个授权，但是呢 它在OAuth整套流程里其实是不提供的，就是不会提供这样的一个流程告诉你就是把用户信息返回给你，它简单就是给你个accesstoken，然后用户给你授权，在授权界面把一些授权给你列出来，但是呢就是用户的信息呢，它是通过它自己的开放api，
users/show	获取用户信息
单独调用这个接口，来获取用户的信息，比如此时就需要传进去 三个参数access_token， uid，screen_name，返回结果就是用户信息，但是这样的步骤，会很复杂 为什么呢
我们从头到尾给大家画下整个流程 flow 方便大家理解
用户的数据是通过微博开放平台提供的。
第一步，客户端与授权中心交互， 获取token
 首先客户端开始，从授权中心获取一个Authorizationcode，点击下微博的图标，跳转到微博的网址，、oauth/authorize，此时的跳转是301跳转，跳转到oauth/authorize之后呢，用户输入用户名和密码，出现授权页面 页面上有授权的scope，询问是否同意授权，点击同意后，进行一个301跳转 返回到我们的客户端中的return_url并附带一个参数code=Authorationcode，然后接下来，我们在客户端 携带authorizationcode和return_url，客户端再次请求授权中心，访问获取token的api，向授权中心申请token，（认证中心，当然要进行认证，认证通过后才能发放token）认证中心向客户端发放token，客户端获得token后，客户端携带token与Resource server 也就是微博开放平台 交互， 访问相应的api，Resource server返回客户端 对应的信息。获取用户信息，然后可以做后续工作，比如简书获取用户资料后，后生成一个简书用户，然后登录，跳转到首页
 大家会注意到简书集成一个微博的一个社会化登录，做了很多事情，有些步骤是用户看不到的，也就是简书后台做的

 大家其实发现，在Oauth流程下，它其实只包括了授权，而拿到权限之后，你才可以单独访问开发平台也就是resource server

 那么open id connect是干什么的，它就是负责来干和resource server交互的事情，
 open id connect是基于OAuth2.0标准之上，再构建的一套流程，它主要是用丰富了获取用户资料的步骤，（也就是客户端和ResourceServer交互流程）我们接下来会简单给大家讲一个open id connect，它是如何来获取用户信息的，简单的流程 给大家演示下


 第一步在简书的页面，要求用户登录，用户选择微博登录，然后从简书跳转到微博的登录页面，用户在微博登录页面输入用户名和密码，然后微博会把用户信息和Accesstoken返会给简书
 这个时候相当于来说，我们在登录这块就会比OAuth来说，更简单，并且在登录这一块及时拿到用户信息，我不需要再调一个它的接口去获取用户信息

 对比下 OAuth流程非常复杂，因为我不仅仅是完成用户授权一个过程，还要拿用户资料，
 OAuth流程不包括提供用户资料，你需要拿到token后，再去访问我的api获取，
 但是在openidconnect这个流程里面，他其实已经包含了 在登录的时候就可以把用户资料返回给你
 下节课我们再通过identityserver结合openidconnect，因为identityserver它内置已经实现了一套openidconnect流程，所以我们也可以很方便的把openidconnect集成到我们的系统当中，在用户登录的时候，就及时把用户信息返回回去
