问题1：consent如何实现的？  对于未知的东西的实现，无法清晰的分析出
问题2： 好奇consent是如何实现的呢？ 不仅仅是理解应用，


那么我们如果要实现consent的逻辑的话，先给大家讲下我们会怎么实现？
这个consent逻辑呢 如果大家还记得的话，当简书跳转到微博认证中心的时候，它会带一串参数如return_url，告诉微博，你登录之后，给我返回到那里去，所以这个return_url呢会一直跟在我们的url后面
当我点击 简书登录 点击微博图标，跳转到微博的登录地址， 此时的url，输入用户名和密码后跳转的url， 此时是授权页面，此时的url，通过这个url呢 其实它带上了所有的信息 ，通过这个信息，我们基本上可以知道在我们的Authorize server里面呢 当前的客户端是谁
redirect_uri
response_type
state
等这些信息
这个信息是它给我们微博的，但是我们微博，点了连接之后呢 也就是授权， 它会有一个redirect_uri 会直接跳到这个地址，然后跳到简书首页。 中间过程不可见，在这个过程下，我们这几件事情  
interactionservice主要干什么？ 它主要是负责从我们的url当中获取到这一个context    
interactionserver，它会根据我们的redirect_uri   其实consent是这样来操作的 首先还是用户输入用户名和密码，然后跳到account下的login方法，login方法有个returnurl 登录成功后，跳转这个地址，如果是需要consent的话，他不会立马跳到客户端地址，，而是跳转到我们自己的consent页面，把这个url带到我们的consent页面

我们运行下 看看

在这个consent的逻辑实现里面，identityserverinteractionservice,Iclientstore,IResourceStore 各负责的角色是什么呢？ 我们在connsentcontroller里面都会有实例 ，identityserverinteractionservice它主要负责我们根据returnurl拿到一个context，也就是通过一个方法，传入这个url。返回一个AuthorizationRequest类型的实例， 就是把url的参数变成一个对象 
通过这对象中的clientid，在clientstore中去检验下，通过后返回具体信息
通过对象中的RequestedScope去 apiresourcestorde去获取scope，返回scope信息
此时scope包括两种apiresource和identityresource，而每一个identityresource都会成为一个scope

  public static  IEnumerable<IdentityResource> GetIdentityResources()//测试方法
        {
            return new List<IdentityResource>
            {
                new IdentityResources.OpenId(),//这个方法说明了啥？  IdentityResources这是个啥类
                new IdentityResources.Profile(),
                new IdentityResources.Email()
            };
        }

		//client中的AllowedScopes  拥有的scope， 允许访问的scope 请求的scope
//之前是允许访问的api，现在是用户信息
                    AllowedScopes={
                        IdentityServerConstants.StandardScopes.Profile,
                        IdentityServerConstants.StandardScopes.OpenId,//每一个IdentityResource是一个scope
                    }// 允许访问的

consent页面展示的每一条，都是scopes的遍历


而每一个apiresource是有多个scope 的  
    //这个会用来所有可以访问的对象，也就是用户的资源
        public static IEnumerable<ApiResource> GetResources()//测试方法 模拟一下 
        {
            return new List<ApiResource>
            {
                new ApiResource("api1","MY Api")
            };
        }


		/// <summary>
		/// An API must have at least one scope. Each scope can have different settings.
		/// </summary>
		public ICollection<Scope> Scopes
		{
			[CompilerGenerated]
			get;
			[CompilerGenerated]
			set;
		} = (ICollection<Scope>)new HashSet();



所以我们这个consentcontroller主要是用来干嘛呢？通过我们的identityserverinteractionservice获取到我们当前的请求的上下文，然后这个上下文里面有我们的clientid，scopeRequested，这个scope就是一个名字而已，不包含具体的信息，就是跟我们在postman里面使用的api1，但是我们可以通过api1，去获取具体的信息，
然后我们根据这些scope，拼成一个model，显示在view中 

我们先来实现这个页面的显示，包括我们要构造一个controller，构造viewmodel，显示在view中

