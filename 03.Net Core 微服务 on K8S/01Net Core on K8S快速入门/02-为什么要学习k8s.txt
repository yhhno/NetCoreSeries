0.乐趣所在，认真 等等积极东西
1.不心生恐惧     等等负面东西
2.罗列翻译，翻译翻译就是知道它的过程
3.对比，条理，概况，学习框架   等等技巧
4.做事总是不完整，缺乏了过程。=》积累就是过程的积累，是不可能偷懒的，一个名词就是一个过程，没有积累，你看到名词就是几个汉字，不知道其中的内容
5:要自己能分析出这个过程 如：微服务带来的好处=》这是一个怎样的过程呢？要自己能分析出这个过程

问题1：做的事情，学习的东西等，要做到心中有数？=》那就是要有个概况，=》这也是个过程
问题2：发现一个问题，接下来就是如何回答问题？
问题3:什么是业务场景，=》就是一个大过程，包含很多小过程=》听到业务场景会有什么反应？蒙，怎么样一个过程不清楚。
问题4：之前的单体和微服务的认识=》注意你的认识是随着情况变化而改变，或者随着选择而改变的。
问题4.1 创业公司在架构层面的考虑=》这是一个怎样的过程呢？
问题5:微服务带来的好处=》这是一个怎样的过程呢？要自己能分析出这个工程
问题5.1 微服务带来好处的同时所带来的挑战=>这是一个怎样的过程呢？
问题5.2 问题实实在在的存在，造成的选择=》问题是如何存在的呢。这是一个怎样的过程呢？
问题5.3 问题的解决既新技术解决问题，=》这是一个怎样的过程呢？
问题5.4 重构导致选择的变化
问题6：之前都不知道有这些过程，就是最简单的写，部署，完了，就是没有知道这些过程，让我们对因为这些过程而诞生的新技术理解不了，=》环境变了，如何去适应
问题7： 实例案例=》就是实际运用的一个过程
问题8：有了k8s后，我们认识的改变，微服务和单体一样了。
问题8.1 有了k8s后，微服务和单体的区别 也就是同时享受微服务和单体的好处
问题9：快速业务的需要，也就是环境的需要，造成非常需要k8s
问题10：公司的选择造成对k8s的需要
问题11： devops的出现带来运维的消失，
问题12： 阐述k8s的必要性，从哪些方面来阐述的？



大家好，我是jesee 腾飞
那么，我们接着上一节课的内容来说，
问题1：做的事情，学习的东西等，要做到心中有数？=》那就是要有个概况，=》这也是个过程
1.k8s是什么？
2.它能够干什么呢？ 为什么如此的重要？
3.我们该如何来学习它？
因为上一节课我们回答了k8s是什么？然后以及他能够干什么呢？ 
我们还有第三个问题？为什么它如此的重要， 那这个问题呢？我们在这节课来说下
问题2：发现一个问题，接下来就是如何回答问题？
如果要回答这个问题？ 我觉得首先我们需要来看，一个案例。也就是现在我们公司在使用的一个情况，来给大家看一下，这个我们在测试环境以及生产环境上是如何使用这个k8s，这样可能大家会更形象一点，
问题3:什么是业务场景，=》就是一个大过程，包含很多小过程=》听到业务场景会有什么反应？蒙，怎么样一个过程不清楚。
 给大家介绍下我的这个业务场景
 我们现在做的这样一个新零售的项目，或者大家可以简单理解为它是一个电商的一个项目，而电商它的业务场景是非常的复杂， 我们有product api，有账号呀，营销呀，然后还有一些库存，购物车，会员，订单， 交易等等有很多的这个api，
 问题4：之前的单体和微服务的认识=》注意你的认识是随着情况变化而改变，或者随着选择而改变的。
 问题4.1 创业公司在架构层面的考虑=》这是一个怎样的过程呢？
 本身呢， 我们作为一家创业公司，刚刚开始的时候，做一个产品，之前有给大家说过，应该从单体结构来出发，可能这样会更简单一些，从架构的层面来考虑呢，就是这个之前大家有说过，从架构层面来说， 之前说反了，大家是说不建议在这个一开始的时候，从微服务	去出发，因为成本比较高，而对创业公司来讲呢，这个不太适合，
 问题5:微服务带来的好处=》这是一个怎样的过程呢？
 那么我们要看下，为什么使用微服务的时候呢，大家都说微服务好，好在哪里？好在它的这个对于你的整个巨大的复杂业务进行这个解耦，每一个业务呢拆成一个小的api之后，可以更快速的去迭代，包括重构，以及它的灵活性会更高，他带来的优势呢，也是非常大的，
 问题5.1 微服务带来好处的同时所带来的挑战=>这是一个怎样的过程呢？
 但是它所带来的问题是什么呢？就是我们在之前发的那篇文章，就是我们说，我们要讲k8s这个文章里面，也有说到，微服务它上了之后呢，它会给你的运维，带来很大的一个难度，也就是说你有这么多api，你要部署，会是很大的一个问题，你要运维呀，对他们进行监控呀，然后包括整个这一系列这个东西，会带来很复杂，
 问题5.2 问题实实在在的存在，造成的选择=》问题是如何存在的呢。这是一个怎样的过程呢？
 如果你没有解决这个问题，你要去上微服务，基本上来说是很难的，或者说很容易造成很大的隐患，那也就是因为有这么大的一个问题摆在这里，所以很多的 包括大公司，小公司也好，他没有一套比较健全的基础设施之前，他不敢轻易的去使用这个微服务这个架构， 
 问题5.3 问题的解决既新技术解决问题，=》这是一个怎样的过程呢？
 而这一点就是k8s，来帮我们，去解决的，所以我们在刚刚开始做这个项目的时候呢，我们没有像之前就是所讲的那样，说你先从一个单体开始出发，慢慢做，就是等你的业务量上来之后，再去做这个微服务，
 问题5.4 重构导致选择的变化
 因为我们在之前已经经历过这个重构，大家都知道重构有多痛苦，对吧，基本上所有的代码翻新一遍，就是之前写过的业务重新来整，那个工程也很复杂，有很多的这个公司基本上在这个重构的过程中呢，业务就停滞了，就是它的这个 之前不是有说过吗？你要开飞机又要换引擎，这种说法是存在的，
 问题6：之前都不知道有这些过程，就是最简单的写，部署，完了，就是没有知道这些过程，让我们对因为这些过程而诞生的新技术理解不了，=》环境变了，如何去适应
 那么我们就不想经历这一步，因为这一步确实太痛苦了，那么我们就是说，我们能不能在最开始的时候，直接就上微服务，有没有这个可能性呢？其实是有的，也就是我们在最开始的时候，就把这套基础设施，现在因为有了k8s的存在，所以让这一套基础设施其实变得非常容易，并没有那么复杂，所以我们来简单给大家讲下我们这个，在我们的这个产品的这个架构当中，我们是如何通过k8s来降低我们整个基础设施，在架构和运维层上是如何做的？
 问题7： 实例案例=》就是实际运用的一个过程
 我们有两个环境第一个是测试环境，在测试环境上来讲，我们其实有三台节点，每个节点上部署不同的api，举个例子，我们有product api service，product api在这个地方，有可能我们还会有我们的订单，我们都把它打成镜像，打成镜像之后，我们就把它部署在k8s集群上，那每一台api呢 其实我们通过k8s呢， 就是我们写一个api，然后把这个api打成镜像，然后部署上去就可以了，非常简单，那部署上去之后呢，我们在测试环境上是开了一个node port，也就是我们可以通过本地直接连到这个api，进行测试，通过这个node port 后面会讲，就是service这个层面，大家现在只需要知道我可以通过一个ip地址直接访问到，这个api就可以了，
 那么同时呢，在测试环境，这个mysql也好，包括我们的redis，rabbitmq，等等这一系列的所有的这个中间件，也全部是部署在这个集群里面的，那么他们之间呢，其实大家如果有用过docker就知道我们的api和mysql之间它可以通过这个service，也就是它通过，就跟我们平常自己访问一个ip地址是一个意思，就是api 访问mysql也是直接通过service来去连接就可以了，
 所以对我们来讲，整套的测试环境它的这个部署也是非常简单的，就是全部是容器化的，在测试环境上，并且我可以快速的去部署，而这么一套测试环境呢，我们可以非常快速，因为我们用了docker和k8s部署之后呢，我们写一个脚本，这个脚本一次性就可以把整套测试环境给部署起来，
 问题8：有了k8s后，我们认识的改变，微服务和单体一样了。
 大家想，如果可以做到这个样子，是不是就和我们单体一模一样， 我只需要把这个api拿过来，就是如果我原先是一个api，那么部署到一个测试环境，很快就部署完了，那么在k8s上，同样我们也可以做到，即使 我有30个或者40个api，同样也可以非常简单快速的启动整套的测试环境，所以他也不会存在给我们测试环境带来复杂度，那同时呢，这套测试环境如果我们要迁移到这个生产环境，也是非常容易的，
 在生产环境上，我们当然没有直接去做这个就是mysql也好，rabbitmq redis等等这些中间件，我们是以服务的形式，也就是说我们用的是云的第三方服务，我们现在用的是腾讯云，包括它的数据库服务，redis服务，消息队列这些我们是用的外部的服务，
 但是在k8s集群里面，他也可以，也就是说你的应用在你的k8s里面，但是你的这个服务呢不在这个k8s集群里面，它是可以通过内部的一个桥接，那么把它连接到外部的一个服务的，也就是k8s集群内部的服务和外部服务之间直接打通，那么你的原先的api也可以通过这个桥接呢，连接到外部的服务，所以我们在生产环境上，其实只有api部署上去，通过这个桥接呢，连接到外部的服务，
 问题8.1 有了k8s后，微服务和单体的区别 也就是同时享受微服务和单体的好处
 在这个测试环境和生产环境，两套环境下，我们其实做到的 在效率上或者成本上，来讲，其实跟单体这个环境结构是差不了多少的，而且我们充分的享受到微服务带给我们在开发时候的效率，包括我们在重构和灵活重构的基础上，我们在整个项目当中其实我们的商品api最开始也就花了两天时间写的，，当然我们业务在后面复杂了之后，我们进行过商品api的重写，
 如果大家可以想下，你一个单体api，你要重写其实，会花很长的时间，但是如果你把它拆开之后呢，你的商品api这个接口不变的情况下，你对地下的代码进行或者业务进行重构，是非常快的，我们基本上重写商品api，就是加上后面业务变得复杂之后，我们重写也只花了两天时间，，所以大家看啊，如果你一个api拆的足够细，或者它的业务隔离开之后，足够简单之后，你的每个api其实可以非常快速的，并且不会有什么大的错误发生，就是非常快得去重构它，
 问题9：快速业务的需要，也就是环境的需要，造成非常需要k8s
 我们在快速迭代业务时候，你需要这样的一种敏捷度，那在这种基础上，k8s带给我们的好处就是我们可以把业务拆的尽量简单，同时呢我们通过这个k8s，我们利用了微服务的优势，也能够在我们掌握好这个k8s之后呢，我们整个生产上的这个基础设施，这一套呢也不会面临特别大的难度，
 问题10：公司的选择造成对k8s的需要
 这个其实现在很多的初创公司在这个使用上，基本上都是这样，那当然很多其他的创业公司，他们会用其他的语言，或者是说java  php，他们基本上来说也就是一样，我们呢用net core那同样其实 它是跨平台的环境 用mac也可以开发，用windows也可以开发，
 他给我们带来的好处是非常大的，我觉得创业公司包括很多互联网公司其实在k8s 整个这块需求是非常巨大的，他给我们带来好处，当然这个是对公司的角度来讲，那对于我们个人来讲，我们作为开发，其实我们要看到这个趋势，，也就是公司呢，他基本上都是再往这个方向去走，
 问题11： devops的出现带来运维的消失，
 所以我们必须要掌握这个技能，掌握好这个技能对我们的好处，第一个就是当然我们有很多公司他对这个技能的需求度是非常高的，这是第一点，第二点呢，它是一个大的趋势，后面的话就是基本上 你们会看到在早些年的时候，公司还会有自己的运维，有专业的运维，有专业的团队去帮我们去做部署，那这是一个非常大的成本，对于早期的创业公司来讲，后面现在基本来讲，公司是什么情况，基本上，很少有运维，就是devops叫开发运维，就是开发人员他其实承担了运维的角色，而现在k8s 我们学习他之后呢，基本上来说，也不需要运维，我们自己其实把这套掌握好之后，就基本上可以把所有的事情搞定了，对于公司来讲，也节省了成本，对于我们来讲，它们的需求在这里。我们掌握这个技能之后，不管是找工作，升级加薪也好，这个对于我们来说，都是非常好的，这个点其实，讲给大家，大家可以  希望大家能够感受到这个k8s它的强大之处，结合微服务，不管是公司也好，对于我们个人开发者也好，他都能够给我们带来非常大的好处和趋势，
 问题12： 阐述k8s的必要性，从哪些方面来阐述的？
 那这就是我们学习k8s的必要性，这节课讲完，
 就是第三节课将要讲怎么去学习这个k8s，既然它这么好，我们当然要快速的去学习它，
 我们下节课就接着讲怎么来学习k8s

