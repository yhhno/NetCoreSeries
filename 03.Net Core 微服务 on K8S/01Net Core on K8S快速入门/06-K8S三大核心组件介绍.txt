此时发现一个问题，就是不太享受这个学习过程。
识别出自己之前的认识和腾飞的讲解有什么不同？ 找出他是如何得到这样的认识的？=》因为自己的认识和认识的方式有问题。
自己看到东西，基本上就是几个文字而已，顶多照着demo做一遍vs大白话它是什么?能干什么？ 内部机制流程是什么？
为什么听了他讲的后就很清楚，很明白，很容易理解呢？=》大白话，深入浅出，整体脉络都有，
第一次尝试不能慌，不能手足无措

0.乐趣所在，认真 等等积极东西
1.不心生恐惧     等等负面东西
2.罗列翻译，翻译翻译就是知道它的过程
3.对比，条理，概况，学习框架   等等技巧
4.做事总是不完整，缺乏了过程。=》积累就是过程的积累，是不可能偷懒的，一个名词就是一个过程，没有积累，你看到名词就是几个汉字，不知道其中的内容
5:要自己能分析出这个过程 如：微服务带来的好处=》这是一个怎样的过程呢？要自己能分析出这个过程
6.本质是什么？是开发过程？ 是单体时的开发过程和微服务时的开发过程，以及有了k8s之后，微服务的开发过程。
7.总结出一个学习方法，
8.对心态有了新的认识=》例如不要收视频时间等因素的干扰，心无旁骛的去干该干的事情

问题0：刚开始接触，觉得难，其实认真执行下来，就没觉得那么难，=》心态问题
问题1：细节理解的越清楚越好， 基本功越扎实。心里越有底，越不慌， 只理解别人教的，只理解看到的，只会运用都不能算是基本功 ，多问为什么？多解释为什么？ 多了解过程，多探索本质再去干其他的，=》心态问题
问题2：心态有问题，以为简单看下就可以掌控一切了，现实狠狠打了脸，然后沮丧，然后一切都不好了
问题3：对比学习，容易理解=》技巧
问题4：了解的越清楚越好，=》这可以是个心态问题


问题1：做的事情，学习的东西等，要做到心中有数？=》那就是要有个概况，=》这也是个过程
1.k8s是什么？
2.它能够干什么呢？ 为什么如此的重要？
3.我们该如何来学习它？

但是，在这里呢，我们先简单把它分为6个步骤
1.先了解全貌和整体
2.对整体结构进入拆分，梳理脉络
3.马上开始行动
4.在行动的过程中逐步加深，每一阶段有阶段性目标
5.及时进行回顾与复盘，与理论相结合
6.输出

这个是我给大家推荐的一个k8s的这个学习路径
1.了解基本概念及核心组件
2.使用本地单节点集群来学习k8s
3.用kubectl与本地集群建立连接
4.部署服务到k8s集群
5.对k8s服务进行扩容，更新
6.进一步学习k8s资源（pod，deployment，service，statefulset，ingress。。。）
7.设计微服务
8.搭建k8s集群或者使用云服务商的k8s服务
9.添加持续集成，日志搜集，监控和指标度量。跟踪

我们会按照这样的步骤 
1.k8s集群基本概念
2.本地搭建k8s单节点集群
3.pod&service&deployment  =》此步骤
4.service的三种类型
5.yaml部署文件语法初体验
6.初始化一个。net core api并push到docker hub
7.把net coreapi 部署到k8s
8.k8s集群高级概念

大家好。我是jesee 腾飞，欢迎大家一起继续跟我学习这个kubernetes快速入门课程，这节课是本系列课的第六小节，
我们来学习下pod和service，这两个是我们k8s核心组件当中的 最基本也是我们经常会用到的 最频繁的两个组件，
也就是我们所讲的资源，=》本质搞清楚
这两个资源呢，我们首先来理解下pod，
问题0：刚开始接触，觉得难，其实认真执行下来，就没觉得那么难，=》心态问题
pod它是kubernetes里面的最小的一个单元的一个逻辑 ，跟我们docker里面的容器，container会有点像，也就是它是一个运行时最小的一个单元，大家可以把它简单理解为容器，当然它跟容器来说呢，是有比较大的区别的，区别之一就是在于现在图片上面的的，在docker上面每一个容器它是只有一个进程，只有一个主进程挂载的（那一个主机上只能有一个这样的后台进程），如果打个比方说，你既要运行nginx，又要运行一些其他的比如说一些数据状态同步之类的东西，监控之类的，那你呢，就可能很难去操作，而且呢对docker来讲呢，它没有办法去保证你两个进程同时运行，当然也有解决方案，其实就是像左边这个图说到的 它可以用supervisord，同时把两个进程都给 让它运行起来，但是呢，由于docker还是只有一个入口，所以你只能把supervisord呢，暴露成入口，这样的话，你的api对外的话，进去的时候呢，也很难去进去到里面， 这个详细的大家参考下，下面这片文档，这个里面会讲的更清楚一点，，
http://dockone.io/article/2682
https://www.kubernetes.org.cn/kubernetes-pod
那我们在这里，只需要简单理解为 pod它是kubernetes里面最小的一个单元逻辑，但是呢，它一个pod里面其实可以运行多个这个容器，我们可以运行多个容器，同时呢，这个容器之间他们的这个挂载，是可以共享的，可以先简单理解这两点，
问题1：细节理解的越清楚越好， 基本功越扎实。心里越有底，越不慌， 只理解别人教的，只理解看到的，只会运用都不能算是基本功 ，多问为什么？多解释为什么？ 多了解过程，多探索本质再去干其他的，=》心态问题
问题2：心态有问题，以为简单看下就可以掌控一切了，现实狠狠打了脸，然后沮丧，然后一切都不好了
这个两个链接可以进行一些延展的阅读，如果大家有兴趣可以去关注下 ，
问题3：对比学习，容易理解=》技巧
这个是pod，如果说我们再把pod对应成这个docker里面这个容器的话呢，我们在docker里面的容器映射端口，我们还记得映射端口之后呢，就可以直接访问，那么对于pod来说呢，我们是不可以这么来干的，他必须在外边挂载一个service，这个service意思呢，他其实类似于对外暴露，把pod信息给对外暴露起来，，暴露出去之后呢，你这个pod就可以对外访问了，所以这个是service主要干的事情，
那关于service呢，它有三种类型，我们会在下节课的时候，给大家继续来讲， 这里我们只需要简单了解pod和service之间的关系就可以了，如果没有这个service，我们的pod它是不可以被访问的，在集群外部不能被访问，
那么我们来看下第三个组件是deployment
问题4：了解的越清楚越好，=》这可以是个心态问题
deployment，他是用来部署的，我们后面的部署的时候，就会大量的用到它，我们刚刚讲了这个pod和service，我们在这里看到这个deployment基本的语法呢，它上面有个apivsersion是必须要有的，然后它的kind  这个是声明kubernetes资源的一个固定模板， apiversion kind还有这个metadata这个都是必须要的，spec就是不同的资源，spec就会不一样，replicas就是我们当着pod实例它会部署多少份，就是副本，我们现在run三份这个副本，那这个template就是我们这个pod 这个deployment用到部署起来的模板，大家可以看到在这个地方会有一个container，container这个地方，会有一个name，就是你这个容器的名称，然后会有一个images 就是你这个容器用的是那个镜像，然后呢是它容器的一个端口，，这个地方大家注意到，它的ocntainers是一个复数，对不对所以在这个地方，用数组的形式，我们可以定义多个容器，在一个deployment 这个pod 里面我们可以run多个容器的
好，然后我们来看下，deployment怎么把，通过就是把这个service跟pod关联和绑定到一起，=》标签对应
我们在下一节课时候，会给大家，把我们本地的这个集群中，kubernetes的dashboard给启用起来，我们可以在这里简单看下，dashboard部署的脚本，它上面同样会有一个deployment，这个deployment用到了这个containers，有一个kubernetes dashboard的一个镜像，同时呢他下面还会一个单独定义的一个serivce，大家注意到这个service 它的kind是service， apiversion 然后是它的metadata，在这个地方呢，这个service会有一个selector对象，他会把这个selector用一个标签k8s-app这种形式呢，跟我们上面的这个deployment里面的这个 是有一个labels标签 k8s-app正好绑定起来，那么我们之后呢，就可以通过443的这个端口，来访问我们这个pod里面暴露的8443端口，但是我们在外边访问的是443端口，，他帮我们做了一个映射，当我们访问这个443的时候呢，实际上访问的是我们上面的而这个pod的8443端口， 所以这个是pod和service之间做的一个联系，一个连接，所以大家可以简单理解为，通过servcie来暴露pod这个资源，就可以了，，
那我们在这节课其实，主要讲的是这个pod和service，我们下届可以来把我们刚刚看到的这个dashboard给它部署起来，部署好之后，你们会看到我怎样通过kubectl来创建这个dashboard，以及呢 我们会对serivce这三种类型，来做个简单的了解，